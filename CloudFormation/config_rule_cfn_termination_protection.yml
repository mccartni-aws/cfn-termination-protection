AWSTemplateFormatVersion: 2010-09-09
Description: This template creates an aws custom config rule that checks whether a CFN template has termination protection enabled. If it doesn't, it remediates that.

Parameters:
  S3BucketName:
    Type: String
    Description: Name of the S3 bucket where the Lambda Code is uploaded as a Zip file

  S3KeyPrefixComplianceCheck: # Don't actually need, as this is just used to check the location of the source code.
    Type: String
    Description: S3 prefix path for Compliance Check Lambda function including the Zip file name
    Default: lambdas/check_termination_protection.py.zip

  S3KeyPrefixRemediation:
    Type: String
    Description: S3 prefix path for remediation Lambda function including the Zip file name
    Default: lambdas/remediate_termination_protection.py.zip
  
  CFNLambdaExecutionRoleName:
    Type: String
    Description: Name of lambda function execution role, which will check compliance with CFN Termination Protection Config Rule.
    Default: Cfn_Termination_Protection_Config_Rule_Role

  CFNLambdaExecutionPolicyName:
    Type: String
    Description: Name of lambda function policy, which will check compliance with CFN Termination Protection Config Rule.
    Default: Cfn_Termination_Protection_Config_Rule_Policy

  CfnTerminationProtectionComplianceCheckLambdaName: 
    Type: String 
    Description: Name of lambda function to check compliance with CFN Termination Protection Config Rule.
    Default: CfnTemplate_TerminationProtection_ComplianceCheck_Lambda

  CfnTerminationProtectionConfigRuleName: 
    Type: String
    Description: Name of AWS config rule that checks whether a CloudFormation template has Termination Protection enabled.
    Default: CFN_Template_Is_Termination_Protected_Config_Rule
  
  CfnTerminationProtectionRemediationLambdaName: 
    Type: String 
    Description: Name of lambda function to remediate CfnTemplateTerminationProtection ConfigRule
    Default: CfnTemplate_TerminationProtection_Remediation_Lambda
  
  RemediationSSMDocName: 
    Type: String 
    Description: Name of SSM document that invokes the CloudFormation termination protection remediation function.
    Default: CfnTemplate_TerminationProtection_Remediation_SSMDocument

  RemediationSSMDocumentAssumeRoleName: 
    Type: String
    Description: Name of SSM document role that invokes the CloudFormation termination protection remediation function.
    Default: CfnTemplate_TerminationProtection_Remediation_SSM_Role

Resources:
  CFNLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref CFNLambdaExecutionRoleName
      Tags:
        - Key: Description
          Value: !Sub Lambda role for compliance check and remediation - ${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: !Ref CFNLambdaExecutionPolicyName
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: logs:*
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - config:PutEvaluations
                  - config:GetComplianceDetailsByConfigRule
                  - cloudformation:UpdateTerminationProtection
                  - iam:PassRole
                Resource: "*"

  CfnTerminationProtectionComplianceCheck:
    Type: AWS::Lambda::Function
    Properties:
      Description: Function to check compliance with CfnTerminationProtectionConfigRule
      Code:
        S3Bucket: !Ref S3BucketName
        S3Key: !Ref S3KeyPrefixComplianceCheck
      FunctionName: !Ref CfnTerminationProtectionComplianceCheckLambdaName
      Role: !GetAtt CFNLambdaExecutionRole.Arn
      Runtime: python3.8
      Handler: check_termination_protection.lambda_handler
      Timeout: 15 #seconds

  ConfigPermissionToCallLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt CfnTerminationProtectionComplianceCheck.Arn
      Action: "lambda:InvokeFunction"
      Principal: "config.amazonaws.com"
      SourceAccount: !Ref "AWS::AccountId"

  CfnTerminationProtectionConfigRule:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: This rule checks whether a CloudFormation template has Termination Protection enabled.
      ConfigRuleName: !Ref CfnTerminationProtectionConfigRuleName
      MaximumExecutionFrequency: TwentyFour_Hours #Allowed values: One_Hour | Six_Hours | Three_Hours | Twelve_Hours | TwentyFour_Hours
      Source:
        Owner: "CUSTOM_LAMBDA"
        SourceDetails:
          - EventSource: "aws.config"
            MessageType: "ConfigurationItemChangeNotification"
        SourceIdentifier: !GetAtt CfnTerminationProtectionComplianceCheck.Arn
    DependsOn: ConfigPermissionToCallLambda

  CfnTerminationProtectionRemediation: 
    Type: AWS::Lambda::Function
    Properties:
      Description: Function to remediate CfnTemplateTerminationProtection ConfigRule
      Code:
        S3Bucket: !Ref S3BucketName
        S3Key: !Ref S3KeyPrefixRemediation
      FunctionName: !Ref CfnTerminationProtectionRemediationLambdaName
      Role: !GetAtt CFNLambdaExecutionRole.Arn
      Runtime: python3.8
      Handler: remediate_termination_protection.lambda_handler
      Timeout: 30 #seconds

  RemediationSSMDoc:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Automation
      Content:
        description: This document invokes the CloudFormation termination protection remediation function.
        assumeRole: "{{ AutomationAssumeRole }}"
        schemaVersion: "0.3" #automation documents use this version
        parameters:
          ResourceId:
            type: String
            description: Name of non-compliant resource
          AutomationAssumeRole:
            type: String
            description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
        mainSteps:
          - name: invokeRemediationFunction
            action: aws:invokeLambdaFunction
            maxAttempts: 3
            timeoutSeconds: 60
            onFailure: Abort
            inputs:
              FunctionName: !Ref CfnTerminationProtectionRemediationLambdaName
              Payload: |-
                {
                  "ResourceId": "{{ ResourceId }}"
                }
      Name: !Ref RemediationSSMDocName


  RemediationSSMDocumentAssumeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ssm.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - Ref: RemediationSSMDocumentAssumeRolePolicy
      RoleName: !Ref RemediationSSMDocumentAssumeRoleName

  RemediationSSMDocumentAssumeRolePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource: !GetAtt "CfnTerminationProtectionRemediation.Arn"

  GlueDataCatalogRemediationConfiguration:
    Type: AWS::Config::RemediationConfiguration
    Properties:
      Automatic: True
      ConfigRuleName: !Ref CfnTerminationProtectionConfigRuleName
      MaximumAutomaticAttempts: 10
      RetryAttemptSeconds: 60
      Parameters:
        ResourceId:
          ResourceValue:
            Value: "RESOURCE_ID"
        AutomationAssumeRole:
          StaticValue:
            Values:
              - !GetAtt "RemediationSSMDocumentAssumeRole.Arn"
      TargetId: !Ref RemediationSSMDocName
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
    DependsOn: CfnTerminationProtectionRemediation

Outputs:
  RemediationLambda:
    Value: !Ref CfnTerminationProtectionRemediationLambdaName
  ComplianceCheckLambda:
    Value: !Ref CfnTerminationProtectionComplianceCheckLambdaName
  RemediationSSMDoc:
    Value: !Ref RemediationSSMDocName
